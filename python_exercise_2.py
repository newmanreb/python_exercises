# Refer back to exercise 1.4, where we printed a DNA string in blocks, with a space between each
# block. Now further develop your code so that it displays a DNA string in the style used in GenBank
# records. So given the DNA sequence:

sequence = "GCTGAGACTTCCTGGACGGGGGACAGGCTGTGGGGTTTCTCAGATAACTGGGCCCCTGCGCTCAGGAGGCCTTCACCCTCTGCTCTGGGTAAAGTTCATTGGAACAGAAAGAAATGGATTTATCTGCTCTTCGCGTTGAAGAAGTACAAAATGTCATTAATGCTATGCAGAAAATCTTAGAGTGTCCCATCTGTCTGGAGTTGATCAAGGAACCTGTCTCCACAAAGTGTGACCACATATTTTGCAAATTTTGCATGCTGAAACTTCTCAACCAGAAGAAAGGGCCTTCACAGTGTCCTTTATGTAAGAATGATATAACCAAAAGGAGCCTACAAGAAAGTACGAGATTTAGTCAACTTGTTGAAGAGCTATTGAAAATCATTTGTGCTTTTCAGCTTGACACAGGTTTGGAGTATGCAAACAGCTATAATTTTGCAAAAAAGGAAAATAACTCTCCTGAACATCTAAAAGATGAAGTTTCTATCATCCAAAGTATGGGCTACAGAAACCGTGCCAAAAGACTTCTACAGAGTGAACCCGAAAATCCTTCCTTGCAGGAAACCAGTCTCAGTGTCCAACTCTCTAACCTTGGAACTGTGAGAACTCTGAGGACAAAGCAGCGGATACAACCTCAAAAGACGTCTGTCTACATTGAATTGGGATCTGATTCTTCTGAAGATACCGTTAATAAGGCAACTTATTGCAGTGTGGGAGATCAAG"

def genbank_format(sequence, block_size=10, blocks_per_row=6):
    seq = sequence.lower()
    row_size = block_size * blocks_per_row

    for start in range(0, len(seq), row_size):
        row_seq = seq[start:start + row_size]

        blocks = []
        for i in range(0, len(row_seq), block_size):
            block = row_seq[i:i + block_size]
            blocks.append(block)

        formatted_row = ' '.join(blocks)
        print(f"{start + 1:<9}{formatted_row}")

genbank_format(sequence)